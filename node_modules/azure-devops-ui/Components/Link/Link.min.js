import{__assign,__extends}from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Link.css";import*as React from"react";import{FocusGroupContext}from"../../FocusGroup";import{FocusZoneContext}from"../../FocusZone";import{Tooltip}from"../../TooltipEx";import{css,getSafeId,KeyCode}from"../../Util";import{getTabIndex}from"../../Utilities/Focus";var Link=function(o){function e(){var e=null!==o&&o.apply(this,arguments)||this;return e.ref=React.createRef(),e.onClick=function(o){e.handleActivation(o)},e.onKeyPress=function(o){e.props.href||o.which!==KeyCode.enter||e.handleActivation(o)},e.onFocus=function(o){e.props.onFocus&&e.props.onFocus(o),e.props.id&&e.context.onFocus(e.props.id)},e}return __extends(e,o),e.prototype.render=function(){var o=this;return React.createElement(FocusZoneContext.Consumer,null,function(e){var t=o.props,r=t.ariaDescribedBy,n=t.ariaLabel,a=t.ariaExpanded,s=t.ariaHasPopup,i=t.ariaSelected,c=t.className,u=t.draggable,p=t.excludeFocusZone,l=t.target,d=t.dataIsFocusable,f=t.rel,m=t.role,h="a";l&&!f&&(f="noopener"),t.href||t.role||(m="button"),t.href||(h="span");var b=React.createElement(h,{ref:o.ref,"aria-describedby":getSafeId(r),"aria-expanded":a,"aria-haspopup":s,"aria-label":n,"aria-selected":i,className:css(c,"bolt-link",t.disabled&&"disabled",t.subtle&&"subtle",t.underline&&"underline"),"data-focuszone":!p&&e.focuszoneId,"data-is-focusable":d,download:t.download,draggable:u,href:t.href,id:getSafeId(t.id),onBlur:t.onBlur,onClick:o.onClick,onFocus:o.onFocus,onKeyPress:o.onKeyPress,onMouseEnter:t.onMouseEnter,onMouseLeave:t.onMouseLeave,onMouseOver:t.onMouseOver,onTouchEnd:t.onTouchEnd,onTouchMove:t.onTouchMove,onTouchStart:t.onTouchStart,rel:f,role:m,tabIndex:getTabIndex(o.props,o.context),target:l},o.props.children);return t.tooltipProps&&(b=React.createElement(Tooltip,__assign({},t.tooltipProps),b)),b})},e.prototype.focus=function(){this.ref.current&&this.ref.current.focus()},e.prototype.handleActivation=function(o){o.defaultPrevented||(this.props.disabled?o.preventDefault():this.props.onClick&&this.props.onClick(o))},e.contextType=FocusGroupContext,e}(React.Component);export{Link};